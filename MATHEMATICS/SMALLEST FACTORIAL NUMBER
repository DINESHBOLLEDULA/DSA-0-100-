Given a number n. The task is to find the smallest number whose factorial contains at least n trailing zeroes.

Example 1:

Input:
n = 1
Output: 5
Explanation : 5! = 120 which has at
least 1 trailing 0.
Example 2:

Input:
n = 6
Output: 25
Explanation : 25! has at least
6 trailing 0.


class Solution
{
    int findNum(int n)
    {
        // Complete this function
        int ans=0;
        if(n==1){
            return 5;
            
        }
        else{
             int low=0;
             int high=5*n;
            while(low<=high){
                 int mid=(low+high)/2;
                if(check(mid,n)){
                    high=mid-1;
                    ans=mid;
                }
                else{
                    low=mid+1;}
            }
            return ans; 
    }
}
 boolean check(int p,int n){
        int f=5;
        int count=0;
        while((p/f)>0){
            count=count+(p/f);
            f=f*5;
            
        }
        if(count>=n){
            return true;}
        else{
            return false;}
 }
}
